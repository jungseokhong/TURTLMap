<?xml version="1.0" encoding="UTF-8"?>
<launch>
    <arg name="bag_dirs" default="/home/user/data/turtl/Log2"/>
    <arg name="bag1" default="$(arg bag_dirs)/log2.bag"/>
    <arg name="bag2" default="$(arg bag_dirs)/log2_imu.bag"/>
    <arg name="bag3" default="$(arg bag_dirs)/log2_zed.bag"/>
    <arg name="start_time" default="15"/>
  
    <!-- rosbag play node with the arguments -->
    <node pkg="rosbag" type="play" name="rosbag_play" 
          args="$(arg bag1) $(arg bag2) $(arg bag3) --clock /tf:=/tf_old /tf_static:=/tf_static_old -s $(arg start_time)" 
    output="log"/>

    <!-- set sim time to true -->
    <param name="/use_sim_time" value="true" />

    <arg name="voxel_size" default="0.05" />

    <node name="turtlmap" pkg="turtlmap" type="turtlmap_node" output="screen">
        <param name="config_file" value="$(find turtlmap)/param/br2config.yaml" />
    </node>

    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find bluerov_visualizer)/viz.rviz" />

    <arg name="model" default="$(find bluerov_visualizer)/bluerov_model/BlueRov2_UI2024.urdf.xacro" />

    <param name="robot_description" command="$(find xacro)/xacro --inorder $(arg model)" />
    <node
        name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="true" output="screen" />

    <!-- Static transform between map and world -->
    <node pkg="tf2_ros" type="static_transform_publisher" name="map_to_world" args="0 0 0 1 0 0 0 map NED_imu" />

    <!-- Static transform between world and camera -->
    <node name="acoustics_visualizer" pkg="bluerov_visualizer" type="visualize_acoustics.py" output="screen" />

    <!-- <node name="voxblox_node" pkg="voxblox_ros" type="tsdf_server" output="screen"
        args="-alsologtostderr" clear_params="true">
        <remap from="pointcloud" to="/zedm/zed_node/point_cloud/cloud_registered" />
        <param name="tsdf_voxel_size" value="$(arg voxel_size)" />
        <param name="tsdf_voxels_per_side" value="16" />
        <param name="voxel_carving_enabled" value="true" />
        <param name="color_mode" value="color" />
        <param name="use_tf_transforms" value="true" />
        <param name="update_mesh_every_n_sec" value="1.0" />
        <param name="min_time_between_msgs_sec" value="0.0" />
        <param name="method" value="fast" />
        <param name="use_const_weight" value="false" />
        <param name="allow_clear" value="true" />
        <param name="verbose" value="true" />
        <remap from="transform" to="/kinect/vrpn_client/estimated_transform" />
        <rosparam file="$(find voxblox_ros)/cfg/cow_and_lady.yaml" />
        <param name="mesh_filename" value="$(find voxblox_ros)/mesh_results/$(anon basement).ply" />
        <param name="world_frame" value="NED_imu" />
    </node> -->

</launch>